pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
⧗=0
state={"intro","running","pause"}
game=state[0]

웃 = {}
cam = {x=0,y=0}
trees = {}
tanks = {}
seedgrows = {}

function _init()
	sfx(9) --replace 9 by 3 for final

	local nb_tree = 20
	while (nb_tree>0) do
		local rnd_x = flr(rnd(32))
		local rnd_y = flr(rnd(32))
		if(mget(rnd_x,rnd_y)==16
			and mget(rnd_x,rnd_y-1)==16
			and mget(rnd_x,rnd_y+1)!=51
			and mget(rnd_x,rnd_y+1)!=52)
		then
			add_tree(new_tree(rnd_x,rnd_y,true))
			mset(rnd_x,rnd_y,22)
			nb_tree -= 1
		end
	end
	
	for y=0,32 do
		for x=0,32 do
			if(mget(x,y)==17)then
				웃 = new_웃(x*8,y*8)
				mset(x,y,16)
			end
		end
	end
	
	for y=0,32 do
		for x=0,32 do
			if(mget(x,y)==51)then
				add(tanks,new_tank(x,y))
			end
		end
	end
end

function _update()
	⧗+=1
	
	if(game==state[0])then
		if(flr(⧗/30)>=7)then --replace 7 by 5 for final
			music()
			game=state[1]
		end
	end
	if(game==state[1])then
 	update_웃(웃)
 	if(웃.x-cam.x<32) cam.x=웃.x-32
 	if(웃.x-cam.x>95) cam.x=웃.x-95
 	if(웃.y-cam.y<32) cam.y=웃.y-32
 	if(웃.y-cam.y>95) cam.y=웃.y-95
 	if(cam.x<0) cam.x=0
 	if(cam.x>127) cam.x=127
 	if(cam.y<0) cam.y=0
 	if(cam.y>138) cam.y=138
 	
 	for t in all (trees) do
 		if(t.pv<=0) del(trees,t)
 	end
 	
 	for sg in all (seedgrows) do
 		if(grow_seedgrow(sg)) del(seedgrows, sg)
 	end
 	
 	for t in all (tanks) do
 		update_tank(t)
 	end
 end
end

function _draw()
	cls()
	
	if(game==state[0])then
		spr(64,56,53,2,2)
		color(7)
		cursor(42,70)
		print("megagorilla")
		color(6)
		cursor(48,76)
		print("presents")
	end
	if(game==state[1])then
 	camera(cam.x,cam.y)
 	map(0,0,0,0,32,32)
 	draw_웃(웃)
 	for t in all (trees) do
 		draw_tree(t)
 	end
 	for t in all (tanks) do
 		draw_tank(t)
 	end
 	
 	--ath
 	camera(0,0)
 	color(10)
 	cursor(1,1)
 	print("☉")
 	color(7)
 	cursor(10,1)
 	print(웃.money)
 	
 	rectfill(0,118,127,127,13)
 	local i=0
 	for item in all (웃.inventory)do
 		spr(item.spr,i*10+1,119)
 		cursor(i*10+6,122)
 		if(item.nb>=10) cursor(i*10+2,122)
 		color(8)
 		if(item.nb>-1) print(item.nb,7)
 		i += 1
 	end
 	rect(웃.inventory_i*10,118,웃.inventory_i*10+9,127,7)
 end
end
-->8
--timber:웃
function new_웃(x,y)
	local t = {}
	t.x = x
	t.y = y
	t.d = 3
	t.spr = 17
	t.frame = 1
	t.s = 1
	t.inventory = {{spr=6,nb=-1}}
	t.inventory_i = 0
	t.money = 0
	t.btn4 = false
	t.btn5 = false
	t.move = false
	return t
end

function update_웃(t)
	--move down
	if(btn(3))then
		for i=1,t.s do
			if(fget(mget((t.x+6)/8,(t.y+8)/8))!=1 and fget(mget((t.x+1)/8,(t.y+8)/8))!=1) t.y+=1
		end
		if(fget(mget((t.x+6)/8,(t.y+8)/8))!=1 and fget(mget((t.x+1)/8,(t.y+8)/8))!=1) t.y+=t.s%1
		if(t.y>248) t.y=248
		t.d = 3
	end
	--move left
	if(btn(0))then
		for i=1,t.s do
			if(fget(mget((t.x-1)/8,t.y/8))!=1 and fget(mget((t.x-1)/8,(t.y+7)/8))!=1) t.x-=1
		end
		if(fget(mget((t.x-1)/8,t.y/8))!=1 and fget(mget((t.x-1)/8,(t.y+7)/8))!=1) t.x-=t.s%1
		if(t.x<-1) t.x=-1
		t.d = 0
	end
	--move right
	if(btn(1))then
		for i=1,t.s do
			if(fget(mget((t.x+8)/8,t.y/8))!=1 and fget(mget((t.x+8)/8,(t.y+7)/8))!=1) t.x+=1
		end
		if(fget(mget((t.x+8)/8,t.y/8))!=1 and fget(mget((t.x+8)/8,(t.y+7)/8))!=1) t.x+=t.s%1
		if(t.x>248) t.x=248
		t.d = 1
	end
	--move up
	if(btn(2))then
		for i=1,t.s do
			if(fget(mget((t.x+6)/8,(t.y-1)/8))!=1 and fget(mget((t.x+1)/8,(t.y-1)/8))!=1) t.y-=1
		end
		if(fget(mget((t.x+6)/8,(t.y-1)/8))!=1 and fget(mget((t.x+1)/8,(t.y-1)/8))!=1) t.y-=t.s%1
		if(t.y<0) t.y=0
		t.d = 2
	end
	--move
	if(btn(0) or btn(1) or btn(2) or btn(3))then
		t.frame += 0.5
		if(t.move==false) sfx(5,-1)
		t.move = true
	else
		t.frame = 1
		if(t.move) sfx(-1,-1)
		t.move = false
	end
	
	if(t.frame>=5) t.frame-=4
	if(t.d==0 or t.d==1) t.spr=0+t.frame
	if(t.d==2) t.spr=32+t.frame
	if(t.d==3) t.spr=16+t.frame
	
	if(btn(4) and t.btn4==false)then
	 t.inventory_i += 1
	 sfx(0)
	end
	if(t.inventory_i>#t.inventory-1) t.inventory_i=0

	if(btn(5) and t.btn5==false)then
		--use pickaxe
 	if(t.inventory[t.inventory_i+1].spr==6)then
 	 if(t.d==0)then --left
 	 	if(hit_tree(flr((t.x-4)/8),flr((t.y+4)/8)))then
	 			sfx(1)
	 		else
	 			--hit seeds
	 			if(retreive_seeds(flr((t.x-4)/8),flr((t.y+4)/8)))then
	 				sfx(1)
	 			else
	 				--hit corn
	 				if(mget(flr((t.x-4)/8),flr((t.y+4)/8))==39)then
 	 				mset(flr((t.x-4)/8),flr((t.y+4)/8),9)
 	 				for i=0,rnd(2) do
  						add_inventory(t,40)
  					end
  					add_inventory(t,46)
 	 				sfx(1)
 	 			else
 	 				sfx(2)
 	 			end
	 			end
	 		end
 	 end
 	 if(t.d==1)then --right
 	 	if(hit_tree(flr((t.x+12)/8),flr((t.y+4)/8)))then
	 			sfx(1)
	 		else
	 			--hit seeds
	 			if(retreive_seeds(flr((t.x+12)/8),flr((t.y+4)/8)))then
	 				sfx(1)
	 			else
	 				--hit corn
	 				if(mget(flr((t.x+12)/8),flr((t.y+4)/8))==39)then
 	 				mset(flr((t.x+12)/8),flr((t.y+4)/8),9)
 	 				for i=0,rnd(2) do
  						add_inventory(t,40)
  					end
  					add_inventory(t,46)
 	 				sfx(1)
 	 			else
 	 				sfx(2)
 	 			end
	 			end
	 		end
 	 end
 	 if(t.d==2)then --up
 	 	if(hit_tree(flr((t.x+4)/8),flr((t.y-4)/8)))then
	 			sfx(1)
	 		else
	 			--hit seeds
	 			if(retreive_seeds(flr((t.x+4)/8),flr((t.y-4)/8)))then
	 				sfx(1)
	 			else
	 				--hit corn
	 				if(mget(flr((t.x+4)/8),flr((t.y-4)/8))==39)then
 	 				mset(flr((t.x+4)/8),flr((t.y-4)/8),9)
 	 				for i=0,rnd(2) do
  						add_inventory(t,40)
  					end
  					add_inventory(t,46)
 	 				sfx(1)
 	 			else
 	 				sfx(2)
 	 			end
	 			end
	 		end
 	 end
 	 if(t.d==3)then --down
 	 	if(hit_tree(flr((t.x+4)/8),flr((t.y+12)/8)))then
	 			sfx(1)
	 		else
	 			--hit seeds
	 			if(retreive_seeds(flr((t.x+4)/8),flr((t.y+12)/8)))then
	 				sfx(1)
	 			else
	 				--hit corn
	 				if(mget(flr((t.x+4)/8),flr((t.y+12)/8))==39)then
 	 				mset(flr((t.x+4)/8),flr((t.y+12)/8),9)
 	 				for i=0,rnd(2) do
  						add_inventory(t,40)
  					end
  					add_inventory(t,46)
 	 				sfx(1)
 	 			else
 	 				sfx(2)
 	 			end
	 			end
	 		end
 	 end
 	else
 		--plant tree
  	if(t.inventory[t.inventory_i+1].spr==24)then
  	 if(t.d==0)then --left
  	 	if(plant_tree(flr((t.x-4)/8),flr((t.y+4)/8)))then
 	 			if(flr((t.x-4)/8) == flr((t.x)/8)) t.x+=8-t.x%8
 	 			sfx(4)
 	 		end
  	 end
  	 if(t.d==1)then --right
  	 	if(plant_tree(flr((t.x+12)/8),flr((t.y+4)/8)))then
 	 			if(flr((t.x+12)/8) == flr((t.x)/8)) t.x-=t.x%8
 	 			sfx(4)
 	 		end
  	 end
  	 if(t.d==2)then --up
  	 	if(plant_tree(flr((t.x+4)/8),flr((t.y-4)/8)))then
 	 			if(flr((t.y-4)/8) == flr((t.y)/8)) t.y+=8-t.y%8
 	 			sfx(4)
 	 		end
  	 end
  	 if(t.d==3)then --down
  	 	if(plant_tree(flr((t.x+4)/8),flr((t.y+12)/8)))then
   			if(flr((t.y+12)/8) == flr((t.y)/8)) t.y-=t.y%8
   			sfx(4)
   		end
   	end
   else
   	--use empty barrel
   	if(t.inventory[t.inventory_i+1].spr==7)then
   	 if(t.d==0)then --left
   	 	if(fill_barrel(flr((t.x-4)/8),flr((t.y+4)/8)))then
  	 			sfx(2)
  	 		end
   	 end
   	 if(t.d==1)then --right
   	 	if(fill_barrel(flr((t.x+12)/8),flr((t.y+4)/8)))then
  	 			sfx(2)
  	 		end
   	 end
   	 if(t.d==2)then --up
   	 	if(fill_barrel(flr((t.x+4)/8),flr((t.y-4)/8)))then
  	 			sfx(2)
  	 		end
   	 end
   	 if(t.d==3)then --down
   	 	if(fill_barrel(flr((t.x+4)/8),flr((t.y+12)/8)))then
  	 			sfx(2)
  	 		end
   	 end
   	else
   		--use water barrel
    	if(t.inventory[t.inventory_i+1].spr==8)then
    	 if(t.d==0)then --left
    	 	if(grow_tree(flr((t.x-4)/8),flr((t.y+4)/8)))then
   	 			sfx(2)
   	 		end
   	 		if(wet_seedgrow(flr((t.x-4)/8),flr((t.y+4)/8)))then
   	 			sfx(2)
   	 		end
    	 end
    	 if(t.d==1)then --right
    	 	if(grow_tree(flr((t.x+12)/8),flr((t.y+4)/8)))then
   	 			sfx(2)
   	 		end
   	 		if(wet_seedgrow(flr((t.x+12)/8),flr((t.y+4)/8)))then
   	 			sfx(2)
   	 		end
    	 end
    	 if(t.d==2)then --up
    	 	if(grow_tree(flr((t.x+4)/8),flr((t.y-4)/8)))then
   	 			sfx(2)
   	 		end
   	 		if(wet_seedgrow(flr((t.x+4)/8),flr((t.y-4)/8)))then
   	 			sfx(2)
   	 		end
    	 end
    	 if(t.d==3)then --down
    	 	if(grow_tree(flr((t.x+4)/8),flr((t.y+12)/8)))then
   	 			sfx(2)
   	 		end
   	 		if(wet_seedgrow(flr((t.x+4)/8),flr((t.y+12)/8)))then
   	 			sfx(2)
   	 		end
    	 end
    	else
    		--use log
     	if(t.inventory[t.inventory_i+1].spr==37
     		and nbof(t,37)>=4)then
    			for i=1,4 do
    				sub_inventory(t,37)
    			end
    			add_inventory(t,7)
    		else
    			--use seeds
      	if(t.inventory[t.inventory_i+1].spr==40)then
      	 if(t.d==0)then --left
      	 	if(plant_seeds(flr((t.x-4)/8),flr((t.y+4)/8)))then
     	 			sfx(2)
     	 		end
      	 end
      	 if(t.d==1)then --right
      	 	if(plant_seeds(flr((t.x+12)/8),flr((t.y+4)/8)))then
     	 			sfx(2)
     	 		end
      	 end
      	 if(t.d==2)then --up
      	 	if(plant_seeds(flr((t.x+4)/8),flr((t.y-4)/8)))then
     	 			sfx(2)
     	 		end
      	 end
      	 if(t.d==3)then --down
      	 	if(plant_seeds(flr((t.x+4)/8),flr((t.y+12)/8)))then
      	 		sfx(2)
     	 		end
      	 end
      	end
     	end
    	end
   	end
  	end
 	end
	end

	if(btn(4))then
		t.btn4 = true
	else
		t.btn4 = false
	end
	
	if(btn(5))then
		t.btn5 = true
	else
		t.btn5 = false
	end
end

function draw_웃(t)
	spr(t.spr,t.x,t.y,1,1,(t.d==0))
end


-->8
--tree
function new_tree(x,y,g)
	local t = {}
	t.x = x
	t.y = y
	t.pv = 7+rnd(4)
	t.grown = g
	return t
end

function draw_tree(t)
	if(t.pv>1 and t.grown) spr(5,t.x*8,(t.y-1)*8,1,2)
end

function hit_tree(x,y)
	for t in all (trees) do
		if(t.x==x and t.y==y)then
			t.pv-=1
			if(t.grown) add_inventory(웃,37)
			if((t.pv<=0) or (t.grown==false))then
				if(t.grown==false) add_inventory(timber,24)
				mset(x,y,16)
				del(trees,t)
			else
				if(t.pv<=1)then
					sfx(6)
					for i=0,rnd(2) do
						add_inventory(웃,24)
					end
				end
			end
			return true
		else
		end
	end
	return false
end

function plant_tree(x,y)
	if(mget(x,y)==16)then
		mset(x,y,23)
		add_tree(new_tree(x,y,false))
		sub_inventory(웃,24)
		return true
	end
	return false
end

function grow_tree(x,y)
	for t in all (trees) do
		if(t.x==x and t.y==y and t.grown==false)then
			mset(x,y,22)
			t.grown = true
			sub_inventory(웃,8)
			add_inventory(웃,7)
			return true
		else
		end
	end
	return false
end
-->8
--inventory
function new_item(spr)
	local i = {}
	i.spr = 7
	i.nb = 1
	return i
end

function fill_barrel(x,y)
	if((mget(x,y)>=10 and mget(x,y)<=13)
		or (mget(x,y)>=25 and mget(x,y)<=29)
		or (mget(x,y)>=41 and mget(x,y)<=45))then
		sub_inventory(웃,7)
		add_inventory(웃,8)
		return true
	end
	return false
end

function add_tree(tre)
	local trs = {}
	for t in all (trees) do
		if(t.y<=tre.y) add(trs,t)
	end
	add(trs,tre)
	for t in all (trees) do
		if(t.y>tre.y) add(trs,t)
	end
	trees = trs
end

function add_inventory(t,spr)
	local added = false
	for item in all (t.inventory) do
		if(item.spr==spr and item.nb<99)then
			item.nb+=1
			added = true
			return
		end
	end
	if(added==false) add(t.inventory,{spr=spr,nb=1})
end

function sub_inventory(t,spr)
	for i=#t.inventory,1,-1 do
		if(t.inventory[i].spr==spr)then
			t.inventory[i].nb-=1
			if(t.inventory[i].nb<=0) del(t.inventory,t.inventory[i])
			if(t.inventory_i>#t.inventory-1) t.inventory_i=0
			return
		end
	end
end

function nbof(t,spr)
	nb = 0
	for i in all (t.inventory) do
		if(i.spr==spr) nb+=i.nb
	end
	return nb
end
-->8
--seedgrow
function new_seedgrow(x,y)
	local sg = {}
	mset(x,y,38)
	sg.x = x
	sg.y = y
	sg.timestamp = ⧗
	sg.tdry = 50+rnd(25) --time to grow when dry
	sg.twet = 5+rnd(2.5) --time to grow when wet
	sg.wet = false
	return sg
end

function plant_seeds(x,y)
	if(mget(x,y)==9)then
		add(seedgrows,new_seedgrow(x,y))
		sub_inventory(웃,40)
		return true
	end
	return false
end

function wet_seedgrow(x,y)
	for sg in all (seedgrows) do
		if(sg.x==x and sg.y==y and sg.wet==false)then
			sg.timestamp = ⧗
			sg.wet = true
			sub_inventory(웃,8)
			add_inventory(웃,7)
			return true
		end
	end
	return false
end

function retreive_seeds(x,y)
	if(mget(x,y)!=38) return false
	for s in all (seedgrows) do
		if(s.x==x and s.y==y)then
			mset(x,y,9)
			del(seedgrows,s)
	 	add_inventory(웃,40)
			return true
		end
	end
	return false
end

function grow_seedgrow(sg)
	if(sg.wet)then
		if((⧗-sg.timestamp)/30>sg.twet)then
			mset(sg.x,sg.y,39)
			return true
		end
	else
		if((⧗-sg.timestamp)/30>sg.tdry)then
			mset(sg.x,sg.y,39)
			return true
		end
	end
	return false
end
-->8
--tank
tank_state = {"locked","empty","water","brewing","finished"}

function new_tank(x,y)
	local t = {}
	t.x = x
	t.y = y
	t.timestamp = nil
	t.brewing = 0 --brewing dime
	t.state = tank_state[0]
	return t
end

function update_tank(t)
	if(t.state==tank_state[3]
		and ⧗-t.timestamp>t.brewing)then
		t.state = tank_state[4]
	end
end

function draw_tank(t)
	for i=0,4 do
		if(t.state == tank_state[i])then
			spr(53+2*i,t.x*8,(t.y-1)*8,2,1)
		end
	end 
end

function unlock_tank(x,y)
	for t in all (tanks) do
		if(t.x==x and t.y==y)then
			
		end
	end
end

function fill_watertank(x,y)
	for t in all (tanks) do
		if(t.x==x and t.y==y)then
		
		end
	end
end

function fill_corntank(x,y)
	for t in all (tanks) do
		if(t.x==x and t.y==y)then
		
		end
	end
end
__gfx__
000000000000990000009900000099000000990000bbbb0000000000000000000000000044444444cccccff33ffccccccccccccccccccccc3333333333333333
00000000009999000099990000999900009999000bbbbbb000660000004444000044440044444444cccccffffffccccccccccccccccccccc3333333333333333
007007000097f7000097f7000097f7000097f700bb8bbbbb0000640004ffff4004cccc4044444444ccccccffffcccccccccccccccccccccc3333333343333333
0007700000ffff0000ffff0000ffff0000ffff00bbbbbb8b00004600044444400444444044444444cccccccccccccccccccccccccccccccc3333333343333333
00077000064ff460064ff460064ff460064ff460bbbbbbbb00040060064444600644446044444444cccccccccccccccccccccccccccccccc3333333333333333
007007000f4664f000f664000f4664f0f046640fbbb8bbbb00400060046666400466664044444444ccccccccccccccccccccccffffcccccc3333333343333333
00000000005555000055550000555500005555000bbbbbb004000000004444000044440044444444cccccccccccccccccccccffffffccccc3343334443333333
000000000050050005000050005005000005500000bbbb0000000000000000000000000044444444cccccccccccccccccccccff33ffccccc4444444443333333
333333330009900000099000000990000009900000044000333333333333333300000000ccccccccffffcccccccccff333333333cccccccc3333333444444444
333333330099990000999900009999000099990000044000333333333333333300000000ccccccccfffcccccccccfff3f33ff3ffcccccccc3333333434433433
33333333007ff700007ff700007ff700007ff70000044000333ff333333bb333000bb000cccccccc3ffcccccccccff33ffffffffcccccccc3333334433333333
3333333300ffff0000ffff0000ffff0000ffff00000440003334433333b34b3300b04b00cccccccc3ffcccccccccfff3ccccffffcccccccc3333333433333333
33333333064ff4600f4ff460064ff460064ff4f00044440033444433333343b3000040b0ccccccccfffcccccccccfff3cccccccccffffccc3333333433333333
333333330f4664f0004664000f4664f00046640004444440344444433334333300040000cccccccc3ffccccccccccf33ccccccccffffffff3333334433333333
333333330055550000555500005555000055550000400400334334333343433300404000cccccccc3fffcccccccccf33ccccccccff3fff333333334433333333
333333330050050000000500005005000050000000000000333333333333333300000000cccccccc3fffcccccccccf33cccccccc333333333333334433333333
3333333300099000000990000009900000099000000000004444444444a44a4400000000444444443ffccccccccccff3333333333333333300a00a0000000000
3377733300999900009999000099990000999900000000004444444444aa4a4400000000c44cc4c433fccccccccccff3333ff33ff33ff33300aa0a0000000000
337a7333009999000099990000999900009999000000000044b44b444aaa4aa400b00b004ccccc4433fccccccccccff333ffffffffffff330aaa0aa000000000
3377733300f99f0000f99f0000f99f0000f99f0000444f00444b44444a4a44a4000b00004cccccc43fffccccccccfff33fffccccccccfff30a0a00a000000000
333b3b3306444460064444f0064444600f4444600444fff04b4444b44aa4a4a40b0000b0ccccccc43ffffccccccffff333fccccccccccf330aa0a0a000000000
3333b3330f4444f0004444000f4444f00044440000444f004444444444a4a444000000004ccccc4433f3ffffffffff333ffccccccccccff300a0a00000000000
3333b333005555000055550000555500005555000000000044b4b44444a4a44400b0b0004c4ccc4433333ffffffff33333fccccccccccff300a0a00000000000
3333333300500500005000000050050000000500000000004444444444444444000000004444444433333333333333333ffccccccccccff30000000000000000
33333333333333333333333334444555555444430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3333333333ffff333333333335444444444444530000044444400000000005555550000000000555555000000000055555500000000005555550000000000000
33336666664444666666333335555444444555530044444444444400005556666665550000555666666555000055566666655500005556666665550000000000
3336666666ffff666666633335555555555555530444444444444440056666666666665005666cccccc6665005666aaaaaa66650056669999996665000000000
33666655544444455566663335555555555555530f444444444444f0056666666666665005cccccccccccc5005aaaaaaaaaaaa50059999999999995000000000
366665555f4444f555566663335555555555553305fff444444fff50055556666665555005555cccccc5555005555aaaaaa55550055559999995555000000000
366655555544445555556663333335555553333305555ffaaff55550055555555555555005555555555555500555555555555550055555555555555000000000
36665533334444333355666333333333333333330455555aa5555540045555555555554004555555555555400455555555555540045555555555554000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00031111001110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00311111000011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00316666700001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
03166666770001100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
03166706707700100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
03166666777770100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
03166665707700100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
03116667707000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
03311600777001100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00311600770001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00331600700011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00031660001110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000166111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000001010101000000000000000001010001010101010000000000000000000100010101010100000101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
1010101010101010101010101010101010101010101010101020101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101020101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010100e0e0e0e0e0e0e20101010101010102010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10101010201010101010101010101e090909090909090f101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10101010101010101010101010101e090909090909090f101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10101010101010102010101010101e090909090909090f101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10101010101010101010101010201e090909290909090f101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10101010101010111010101010101e090909090909090f201010102010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10101010101010101010101010101e090909090909090f100e0e0e0e0e0e0e20000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10101010101010101010101010101e090909090909090f1e272727272727270f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2010101010101010101010101010101f1f1f1f1f1f1f101e272727272727270f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010201010101010100e0e0e0e0e0e0e101e272727272727270f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10101010101020101010101010101e090909090909090f1e272727292727270f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010102c1c1c2d101e090909090909090f1e272727272727270f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
101010101010102c1c0b19191b101e090909090909090f1e272727272727270f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010102c0b191919190a2d1e090909290909090f1e272727272727270f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010102a0d19191919191b1e090909090909090f101f1f1f1f1f1f1f10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
201010101010102a0d191919191b1e090909090909090f100e0e0e0e0e0e0e10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10101010101010102a0d1919191b1e090909090909090f1e090909090909090f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010102a0d190c2b101f1f1f1f1f1f1f101e090909090909090f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
101010101020101010102a1d2b101010101010101010101e090909090909090f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10101010101010101020101010102010101010101010201e090909290909090f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10101010101010101010101010101010101010101010101e090909090909090f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10101010101010101010101010101010101010101010101e090909090909090f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10101010101010101010101010101020101010101010101e090909090909090f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010201010101010101010101010101010101010101020101f1f1f1f1f1f1f20000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101020201010101020101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010101020101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010101010101010101010102010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101020101010101010101010101010101010101010101010101010201010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010333410333410333410101010101010101033341033341033341010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010102010101010201030313210102010101010101020102010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100001006010060100601006010060100601060010600106001060010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000016000160001600
0001000002650086500e65013650176501a650206502565029650306501e6500f650016500165027700277002770027700277002770027700277002765027650246501f000180001100008000020000100000000
0001000002650086500e65013650176501a650206502565029650306501e6500f650016500165027700277002770027700277002770027700277002760027600246001f000180001100008000020000100000000
001000001c0501c0501c0501f05023050000001f050000001c050230501f0501f0501c05000000000001b0001d0501d0501d05020050240501e00020050210001d0502405020050200501d0500f0000d0000b000
00020000113501115014150161501915018150131500f1500a150081500a1500b1500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00020115000000743005430044300343005430064300a4000b4000c4000a400094500745007450094500b45000000000000000000000000000000000000000000000000000000000000000000000000000000000
000200000265001650056500d650186501e65027650296502b6502e6502b6502d650296502c650266502a65023650286502265027650206502565020650226501e640206401d6301e6301b6201c6201961019610
0020001d240501f0001f0502005027000240502100027050300002605024050240502e000220500c10024050280002b050290502700027050240502405011100220500b100240500b1002400024000240000b000
001d00000c1500c1500c1500c1500c10007150071500815008150081500910007100071500715007150172000c1500c1500c1500c150141001415014150131501315013150131000f1500f1500f1500f1500f100
001a0000021501a0001a000021500415005150220000a15021000091501d0001d0001d0501b0001b0501b000071500610007100071500a150091500510005150021000215000000000001d050000001b05000000
__music__
02 07084844

